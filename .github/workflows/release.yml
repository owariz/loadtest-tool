name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2  # ตรวจสอบว่ามีการดึงโค้ดออกจาก repository

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.200'  # ปรับเป็นเวอร์ชัน .NET ที่คุณใช้

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Publish the project (Generate EXE)
        run: dotnet publish -c Release -r win-x64 --self-contained false --output ./publish

      - name: Archive the build output
        uses: actions/upload-artifact@v4
        with:
          name: LoadTestExe
          path: ./publish/LoadTest.exe

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code again (for tag creation)
        uses: actions/checkout@v2  # ตรวจสอบว่ามีการดึงโค้ดออกจาก repository อีกครั้งเพื่อใช้ git

      - name: Create a tag
        run: |
          VERSION_TAG=$(git describe --tags --abbrev=0)  # ใช้ tag ล่าสุดจาก git
          git tag -a "v$VERSION_TAG" -m "Release v$VERSION_TAG"
          git push origin "v$VERSION_TAG"
      
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: ./publish/LoadTest.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
